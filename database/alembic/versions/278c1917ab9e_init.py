"""init

Revision ID: 278c1917ab9e
Revises: 
Create Date: 2025-08-20 13:18:38.744348

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from typing import Any
import fastapi_storages
from fastapi_storages import FileSystemStorage
from fastapi_storages.integrations.sqlalchemy import FileType as _FileType
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '278c1917ab9e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class FileType(_FileType):
    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(storage=FileSystemStorage(path='/tmp'), *args, **kwargs)


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lessons',
    sa.Column('title', sa.VARCHAR(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('text', sa.VARCHAR(length=300), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slides',
    sa.Column('order_number', sa.Integer(), nullable=False),
    sa.Column('content_url', FileType(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_lessons',
    sa.Column('user_tab_num', sa.VARCHAR(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('correct_percent', sa.SmallInteger(), nullable=False),
    sa.Column('answers', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_lessons', 'user_lessons', ['user_tab_num'], unique=False, postgresql_using='hash')
    op.create_table('answers',
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('text', sa.VARCHAR(length=200), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('answers')
    op.drop_index('idx_user_lessons', table_name='user_lessons', postgresql_using='hash')
    op.drop_table('user_lessons')
    op.drop_table('slides')
    op.drop_table('questions')
    op.drop_table('lessons')
    # ### end Alembic commands ###
